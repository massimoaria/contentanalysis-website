{
  "hash": "7d220f50fc2399f42333b06f3751e7b0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Citation Analysis\"\n---\n\n## Overview\n\nThe contentanalysis package provides sophisticated tools for extracting, analyzing, and matching citations in scientific documents. It detects multiple citation formats, extracts contextual information, and automatically matches citations to references using CrossRef.\n\n## Citation Detection\n\n### Supported Citation Formats\n\nThe package detects two main citation types:\n\n**Narrative Citations**\n- Author is part of the sentence\n- Examples: \"Smith (2020) showed...\", \"According to Jones et al. (2019)...\"\n\n**Parenthetical Citations**\n- Author in parentheses\n- Examples: \"(Smith, 2020)\", \"(Jones et al., 2019; Brown, 2021)\"\n\n### Citation Patterns\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(contentanalysis)\nlibrary(dplyr)\n\n# After analysis\ndoc <- pdf2txt_auto(\"paper.pdf\", n_columns = 2)\nanalysis <- analyze_scientific_content(\n  text = doc,\n  doi = \"10.xxxx/xxxxx\",\n  mailto = \"your@email.com\"\n)\n\n# View citation types\ntable(analysis$citations$citation_type)\n\n# Example distribution:\n#   narrative parenthetical \n#        18            24\n\n# View sample citations\nanalysis$citations %>%\n  select(citation_text, citation_type, section) %>%\n  head(10)\n```\n:::\n\n\n## Citation Extraction\n\n### Basic Citation Information\n\nEach citation includes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Citation data structure\nstr(analysis$citations)\n\n# Key fields:\n# - citation_text: Raw citation text\n# - citation_text_clean: Cleaned version\n# - citation_type: narrative or parenthetical\n# - section: Document section where found\n# - position: Character position in document\n```\n:::\n\n\n### Citation by Section\n\nAnalyze citation patterns across sections:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Citations per section\nsection_counts <- analysis$citations %>%\n  count(section, sort = TRUE)\n\nprint(section_counts)\n\n# Example output:\n#   section       n\n#   Discussion   12\n#   Introduction 10\n#   Methods       8\n#   Results       7\n#   Abstract      5\n\n# Citation types by section\nsection_types <- analysis$citations %>%\n  group_by(section, citation_type) %>%\n  summarise(count = n(), .groups = \"drop\") %>%\n  tidyr::pivot_wider(names_from = citation_type, values_from = count)\n\nprint(section_types)\n```\n:::\n\n\n### Citation Density\n\nCalculate citation intensity:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Overall citation density (per 1000 words)\nanalysis$summary$citation_density\n\n# Citation density by section\nsection_words <- sapply(doc[names(doc) != \"Full_text\"], function(x) {\n  length(strsplit(x, \"\\\\s+\")[[1]])\n})\n\nsection_citation_counts <- analysis$citations %>%\n  count(section)\n\ndensity_by_section <- section_citation_counts %>%\n  mutate(\n    words = section_words[section],\n    density = (n / words) * 1000\n  ) %>%\n  arrange(desc(density))\n\nprint(density_by_section)\n```\n:::\n\n\n## Citation Contexts\n\n### Extracting Context\n\nAccess text surrounding citations:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# View citation contexts\ncontexts <- analysis$citation_contexts %>%\n  select(citation_text_clean, section, words_before, words_after)\n\nhead(contexts, 5)\n\n# Example:\n# citation_text_clean  section  words_before                  words_after\n# \"Breiman (2001)\"     Methods  \"as shown by the method of\"   \"provides excellent results\"\n```\n:::\n\n\n### Analyzing Citation Usage\n\nExamine how citations are used:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find citations with specific context patterns\n\n# Method citations\nmethod_citations <- analysis$citation_contexts %>%\n  filter(grepl(\"method|approach|technique|algorithm\", \n               paste(words_before, words_after), \n               ignore.case = TRUE))\n\ncat(\"Method-related citations:\", nrow(method_citations), \"\\n\")\n\n# Supporting citations\nsupport_citations <- analysis$citation_contexts %>%\n  filter(grepl(\"shown|demonstrated|found|reported\", \n               words_before, \n               ignore.case = TRUE))\n\ncat(\"Supporting evidence citations:\", nrow(support_citations), \"\\n\")\n\n# Contrasting citations\ncontrast_citations <- analysis$citation_contexts %>%\n  filter(grepl(\"however|unlike|contrary|different\", \n               words_before, \n               ignore.case = TRUE))\n\ncat(\"Contrasting citations:\", nrow(contrast_citations), \"\\n\")\n```\n:::\n\n\n### Context Length Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Average context length\nanalysis$citation_contexts %>%\n  mutate(\n    before_length = sapply(strsplit(words_before, \"\\\\s+\"), length),\n    after_length = sapply(strsplit(words_after, \"\\\\s+\"), length)\n  ) %>%\n  summarise(\n    avg_before = mean(before_length),\n    avg_after = mean(after_length)\n  )\n```\n:::\n\n\n## Reference Matching\n\n### Automatic Matching\n\nCitations are automatically matched to references:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# View matched citations\nmatched <- analysis$citation_references_mapping %>%\n  select(citation_text_clean, cite_author, cite_year,\n         ref_full_text, match_confidence)\n\nhead(matched, 10)\n\n# Match quality distribution\ntable(matched$match_confidence)\n\n# High confidence matches\nhigh_conf_rate <- mean(matched$match_confidence == \"high\")\ncat(\"High confidence rate:\", round(high_conf_rate * 100, 1), \"%\\n\")\n```\n:::\n\n\n### Matching Diagnostics\n\nAssess matching quality:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Print diagnostics\nprint_matching_diagnostics(analysis)\n\n# Custom diagnostic\nmatching_stats <- analysis$citation_references_mapping %>%\n  group_by(match_confidence) %>%\n  summarise(\n    count = n(),\n    avg_year_match = mean(!is.na(cite_year) & \n                          cite_year == ref_year, na.rm = TRUE)\n  )\n\nprint(matching_stats)\n```\n:::\n\n\n### Unmatched Citations\n\nIdentify citations without matches:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find unmatched citations\nall_citations <- analysis$citations$citation_text_clean\nmatched_citations <- unique(analysis$citation_references_mapping$citation_text_clean)\n\nunmatched <- setdiff(all_citations, matched_citations)\n\ncat(\"Unmatched citations:\", length(unmatched), \"\\n\")\ncat(\"Match rate:\", \n    round((1 - length(unmatched)/length(all_citations)) * 100, 1), \n    \"%\\n\")\n\n# View unmatched\nif (length(unmatched) > 0) {\n  cat(\"\\nUnmatched citations:\\n\")\n  print(head(unmatched, 10))\n}\n```\n:::\n\n\n## Advanced Analysis\n\n### Most Cited References\n\nIdentify frequently cited works:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Citation frequency\ncite_freq <- analysis$citation_references_mapping %>%\n  count(ref_full_text, sort = TRUE)\n\n# Top 10 most cited\ntop_cited <- head(cite_freq, 10)\nprint(top_cited)\n\n# Visualize\nlibrary(ggplot2)\nggplot(top_cited, aes(x = reorder(substr(ref_full_text, 1, 50), n), y = n)) +\n  geom_col(fill = \"steelblue\") +\n  coord_flip() +\n  labs(title = \"Top 10 Most Cited References\",\n       x = \"Reference\", y = \"Citation Count\") +\n  theme_minimal()\n```\n:::\n\n\n### Citation Networks\n\nAnalyze co-citation patterns:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Citations that appear together\nnetwork_data <- analysis$network_data\n\n# Most frequently co-cited pairs\ntop_pairs <- network_data %>%\n  arrange(distance) %>%\n  head(20)\n\nprint(top_pairs %>% select(citation_from, citation_to, distance))\n\n# Average co-occurrence distance\nmean_distance <- mean(network_data$distance)\ncat(\"Average distance between co-cited references:\", \n    round(mean_distance), \"characters\\n\")\n```\n:::\n\n\n### Author Analysis\n\nExtract author information:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Parse authors from citations\nextract_first_author <- function(cite) {\n  # Simple extraction (customize as needed)\n  gsub(\"\\\\s*\\\\(.*\\\\)\", \"\", cite) %>%\n    gsub(\"\\\\s*et al\\\\..*\", \"\", .) %>%\n    trimws()\n}\n\ncitation_authors <- analysis$citations %>%\n  mutate(first_author = extract_first_author(citation_text_clean))\n\n# Most cited first authors\nauthor_counts <- citation_authors %>%\n  count(first_author, sort = TRUE)\n\nhead(author_counts, 15)\n```\n:::\n\n\n### Temporal Analysis\n\nAnalyze citation years:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract years from matched citations\nyear_data <- analysis$citation_references_mapping %>%\n  filter(!is.na(cite_year)) %>%\n  count(cite_year) %>%\n  arrange(cite_year)\n\n# Visualize\nggplot(year_data, aes(x = cite_year, y = n)) +\n  geom_line(color = \"steelblue\", size = 1) +\n  geom_point(color = \"steelblue\", size = 2) +\n  labs(title = \"Citations by Publication Year\",\n       x = \"Year\", y = \"Number of Citations\") +\n  theme_minimal()\n\n# Recent vs older citations\ncurrent_year <- as.numeric(format(Sys.Date(), \"%Y\"))\nrecent_threshold <- current_year - 5\n\nrecent_vs_old <- analysis$citation_references_mapping %>%\n  filter(!is.na(cite_year)) %>%\n  mutate(period = ifelse(cite_year >= recent_threshold, \"Recent\", \"Older\")) %>%\n  count(period)\n\nprint(recent_vs_old)\n```\n:::\n\n\n## Citation Metrics\n\n### Calculate Citation Metrics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Comprehensive citation metrics\nmetrics <- list(\n  total_citations = nrow(analysis$citations),\n  unique_references = length(unique(\n    analysis$citation_references_mapping$ref_full_text\n  )),\n  narrative_citations = sum(analysis$citations$citation_type == \"narrative\"),\n  parenthetical_citations = sum(analysis$citations$citation_type == \"parenthetical\"),\n  matched_rate = nrow(analysis$citation_references_mapping) / \n                 nrow(analysis$citations),\n  citation_density = analysis$summary$citation_density,\n  avg_citations_per_section = mean(table(analysis$citations$section)),\n  sections_with_citations = length(unique(analysis$citations$section))\n)\n\n# Print metrics\ncat(\"Citation Analysis Metrics:\\n\")\ncat(\"==========================\\n\")\nfor (name in names(metrics)) {\n  cat(sprintf(\"%-30s: %.2f\\n\", name, metrics[[name]]))\n}\n```\n:::\n\n\n### Section-Specific Metrics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Detailed section metrics\nsection_metrics <- analysis$citations %>%\n  group_by(section) %>%\n  summarise(\n    total_citations = n(),\n    narrative = sum(citation_type == \"narrative\"),\n    parenthetical = sum(citation_type == \"parenthetical\"),\n    narrative_pct = round(narrative / total_citations * 100, 1)\n  ) %>%\n  arrange(desc(total_citations))\n\nprint(section_metrics)\n```\n:::\n\n\n## Export Citation Data\n\n### Export Functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create export directory\ndir.create(\"citation_analysis\", showWarnings = FALSE)\n\n# 1. All citations\nwrite.csv(analysis$citations,\n          \"citation_analysis/all_citations.csv\",\n          row.names = FALSE)\n\n# 2. Matched citations with references\nwrite.csv(analysis$citation_references_mapping,\n          \"citation_analysis/matched_citations.csv\",\n          row.names = FALSE)\n\n# 3. Citation contexts\nwrite.csv(analysis$citation_contexts,\n          \"citation_analysis/citation_contexts.csv\",\n          row.names = FALSE)\n\n# 4. Citation metrics\nmetrics_df <- data.frame(\n  metric = names(metrics),\n  value = unlist(metrics)\n)\nwrite.csv(metrics_df,\n          \"citation_analysis/metrics.csv\",\n          row.names = FALSE)\n\n# 5. Section distribution\nwrite.csv(section_metrics,\n          \"citation_analysis/section_metrics.csv\",\n          row.names = FALSE)\n```\n:::\n\n\n## Case Studies\n\n### Case Study 1: Literature Review Paper\n\nAnalyzing citation patterns in a literature review:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# High citation density expected\nif (analysis$summary$citation_density > 15) {\n  cat(\"High citation density detected - consistent with review paper\\n\")\n}\n\n# Introduction should have many citations\nintro_citations <- analysis$citations %>%\n  filter(section == \"Introduction\") %>%\n  nrow()\n\ncat(\"Introduction citations:\", intro_citations, \"\\n\")\n\n# Check for seminal works (older citations)\nold_citations <- analysis$citation_references_mapping %>%\n  filter(!is.na(cite_year), cite_year < 2000) %>%\n  nrow()\n\ncat(\"Pre-2000 citations:\", old_citations, \"\\n\")\n```\n:::\n\n\n### Case Study 2: Methods Paper\n\nAnalyzing a methodology-focused paper:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Methods section should have substantial citations\nmethods_citations <- analysis$citations %>%\n  filter(section == \"Methods\") %>%\n  nrow()\n\nmethods_pct <- methods_citations / nrow(analysis$citations) * 100\n\ncat(\"Methods citations:\", methods_citations, \n    \"(\", round(methods_pct, 1), \"%)\\n\")\n\n# Look for method-related terms in contexts\nmethod_contexts <- analysis$citation_contexts %>%\n  filter(section == \"Methods\",\n         grepl(\"algorithm|procedure|technique|approach\", \n               paste(words_before, words_after),\n               ignore.case = TRUE))\n\ncat(\"Method-related citation contexts:\", nrow(method_contexts), \"\\n\")\n```\n:::\n\n\n## Tips and Best Practices\n\n::: {.callout-tip}\n## Improving Match Rates\n\nTo improve citation-reference matching:\n\n1. **Always provide DOI**: Enables CrossRef integration\n2. **Check Reference section**: Ensure it was properly extracted\n3. **Review low-confidence matches**: May need manual verification\n4. **Standard formats**: Works best with standard citation styles\n:::\n\n::: {.callout-tip}\n## Context Window\n\nChoose appropriate window size:\n\n- **Narrow (5-7 words)**: For focused analysis\n- **Medium (10-12 words)**: Good balance (recommended)\n- **Wide (15-20 words)**: For sentence-level context\n:::\n\n::: {.callout-warning}\n## Citation Format Variations\n\nBe aware of:\n\n- Different citation styles (APA, MLA, Chicago, etc.)\n- Non-standard formats may be missed\n- Multiple citations in one parenthesis\n- In-text references vs. bibliography citations\n:::\n\n## See Also\n\n- [Content Analysis](content-analysis.qmd): Main analysis function\n- [Network Visualization](network-viz.qmd): Visualize citation networks\n- [Tutorial](../tutorial.qmd): Complete workflow examples",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}