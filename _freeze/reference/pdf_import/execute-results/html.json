{
  "hash": "07e693caa9143fb7b89e7da40f0a0cc6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"PDF Import Functions\"\n---\n\n## Overview\n\nThe PDF import functions handle the extraction of text from PDF documents while preserving document structure. The package provides automatic section detection and supports various column layouts commonly found in academic papers.\n\n## Main Function\n\n### pdf2txt_auto()\n\nImport PDF with automatic section detection and multi-column support.\n\n**Usage**\n\n```r\npdf2txt_auto(\n  file_path,\n  n_columns = 1,\n  sections = TRUE,\n  section_keywords = NULL\n)\n```\n\n**Arguments**\n\n- `file_path`: Character string. Path to the PDF file\n- `n_columns`: Integer. Number of columns in the PDF layout (1, 2, or 3)\n- `sections`: Logical. Whether to split text into sections\n- `section_keywords`: Character vector. Custom keywords for section detection\n\n**Value**\n\nA named list containing:\n\n- `Full_text`: The complete document text\n- Section-specific text (e.g., `Abstract`, `Introduction`, `Methods`, etc.)\n\n## Examples\n\n### Basic Import\n\nImport a simple single-column PDF:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(contentanalysis)\n\n# Single column PDF\ndoc <- pdf2txt_auto(\"paper.pdf\", n_columns = 1)\n\n# Check structure\nnames(doc)\nstr(doc, max.level = 1)\n```\n:::\n\n\n### Multi-Column PDFs\n\nMost academic papers use two-column layouts:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Two-column layout (most common)\ndoc <- pdf2txt_auto(\"paper.pdf\", n_columns = 2)\n\n# Three-column layout (less common)\ndoc_three <- pdf2txt_auto(\"paper.pdf\", n_columns = 3)\n```\n:::\n\n\n### Section Detection\n\nThe function automatically detects common academic sections:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# With automatic section detection (default)\ndoc <- pdf2txt_auto(\"paper.pdf\", n_columns = 2, sections = TRUE)\n\n# View detected sections\nnames(doc)\n# [1] \"Full_text\"    \"Abstract\"     \"Introduction\" \"Methods\"     \n# [5] \"Results\"      \"Discussion\"   \"References\"\n\n# Access specific sections\ncat(doc$Abstract)\ncat(doc$Introduction)\n```\n:::\n\n\n### Without Section Splitting\n\nExtract text without section detection:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get only full text\ntext_only <- pdf2txt_auto(\"paper.pdf\", sections = FALSE)\n\n# Result is a list with only Full_text\nnames(text_only)\n# [1] \"Full_text\"\n```\n:::\n\n\n### Custom Section Keywords\n\nDefine custom keywords for section detection:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Custom section keywords\nmy_keywords <- list(\n  Background = c(\"background\", \"literature review\"),\n  Methodology = c(\"methodology\", \"experimental design\"),\n  Findings = c(\"findings\", \"observations\"),\n  Conclusions = c(\"conclusions\", \"summary\")\n)\n\ndoc <- pdf2txt_auto(\n  \"paper.pdf\",\n  n_columns = 2,\n  sections = TRUE,\n  section_keywords = my_keywords\n)\n\nnames(doc)\n```\n:::\n\n\n## Working with Results\n\n### Accessing Section Content\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get word count per section\nsection_lengths <- sapply(doc[names(doc) != \"Full_text\"], function(x) {\n  length(strsplit(x, \"\\\\s+\")[[1]])\n})\n\nprint(section_lengths)\n\n# Example output:\n#    Abstract Introduction      Methods      Results   Discussion   References \n#         234         1052          876         1342          945          523\n```\n:::\n\n\n### Checking Section Quality\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check if important sections were detected\nrequired_sections <- c(\"Abstract\", \"Introduction\", \"Methods\", \"Results\")\ndetected <- required_sections %in% names(doc)\nnames(detected) <- required_sections\n\nprint(detected)\n\n# Identify missing sections\nmissing <- required_sections[!detected]\nif (length(missing) > 0) {\n  cat(\"Warning: Missing sections:\", paste(missing, collapse = \", \"), \"\\n\")\n}\n```\n:::\n\n\n### Preview Section Content\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Preview first 500 characters of each section\npreview_sections <- function(doc, n_chars = 500) {\n  sections <- names(doc)[names(doc) != \"Full_text\"]\n  \n  for (section in sections) {\n    cat(\"\\n===\", section, \"===\\n\")\n    cat(substr(doc[[section]], 1, n_chars), \"...\\n\")\n  }\n}\n\npreview_sections(doc)\n```\n:::\n\n\n## Common Use Cases\n\n### Use Case 1: Prepare for Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import PDF\ndoc <- pdf2txt_auto(\"example_paper.pdf\", n_columns = 2)\n\n# Verify sections were detected\nif (!\"Introduction\" %in% names(doc)) {\n  warning(\"Introduction not detected - check section keywords\")\n}\n\n# Pass to analysis\nanalysis <- analyze_scientific_content(\n  text = doc,\n  doi = \"10.xxxx/xxxxx\",\n  mailto = \"your@email.com\"\n)\n```\n:::\n\n\n### Use Case 2: Extract Specific Sections\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import multiple papers and extract only Methods\npapers <- c(\"paper1.pdf\", \"paper2.pdf\", \"paper3.pdf\")\n\nmethods_sections <- lapply(papers, function(p) {\n  doc <- pdf2txt_auto(p, n_columns = 2)\n  doc$Methods\n})\n\nnames(methods_sections) <- papers\n\n# Analyze methods section lengths\nmethods_lengths <- sapply(methods_sections, function(m) {\n  if (!is.null(m)) {\n    length(strsplit(m, \"\\\\s+\")[[1]])\n  } else {\n    NA\n  }\n})\n\nprint(methods_lengths)\n```\n:::\n\n\n### Use Case 3: Batch Processing\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Process multiple papers with different layouts\nprocess_paper <- function(file, columns = 2) {\n  tryCatch({\n    doc <- pdf2txt_auto(file, n_columns = columns)\n    list(\n      success = TRUE,\n      sections = names(doc),\n      word_count = length(strsplit(doc$Full_text, \"\\\\s+\")[[1]]),\n      doc = doc\n    )\n  }, error = function(e) {\n    list(\n      success = FALSE,\n      error = e$message,\n      doc = NULL\n    )\n  })\n}\n\n# Process all PDFs in directory\npdf_files <- list.files(pattern = \"\\\\.pdf$\")\nresults <- lapply(pdf_files, process_paper)\nnames(results) <- pdf_files\n\n# Check success rate\nsuccess_rate <- mean(sapply(results, function(r) r$success))\ncat(\"Successfully processed:\", success_rate * 100, \"%\\n\")\n```\n:::\n\n\n## Tips and Best Practices\n\n::: {.callout-tip}\n## Column Detection\n\n- **Start with n_columns = 2**: Most academic papers use two columns\n- If text appears jumbled, try different column values\n- Single-column: theses, reports, preprints\n- Two-column: journal articles, conference papers\n- Three-column: some conference proceedings\n:::\n\n::: {.callout-tip}\n## Section Detection\n\n- Works best with clearly formatted section headers\n- Case-insensitive matching\n- Handles common variations (e.g., \"METHODS\", \"Methods\", \"Methodology\")\n- Custom keywords useful for non-standard formats\n:::\n\n::: {.callout-warning}\n## Limitations\n\n- Requires text-based PDFs (not scanned images)\n- Complex layouts may affect text extraction\n- Tables and figures may disrupt text flow\n- Some formatting is lost in plain text conversion\n:::\n\n## Troubleshooting\n\n### Problem: Garbled or Jumbled Text\n\n**Solution**: Adjust the `n_columns` parameter\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Try different column settings\ndoc_1col <- pdf2txt_auto(\"paper.pdf\", n_columns = 1)\ndoc_2col <- pdf2txt_auto(\"paper.pdf\", n_columns = 2)\ndoc_3col <- pdf2txt_auto(\"paper.pdf\", n_columns = 3)\n\n# Compare results\nsapply(list(doc_1col, doc_2col, doc_3col), function(d) {\n  substr(d$Full_text, 1, 200)\n})\n```\n:::\n\n\n### Problem: Sections Not Detected\n\n**Solution**: Check section headers and use custom keywords\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import without sections to see raw text\ndoc_raw <- pdf2txt_auto(\"paper.pdf\", sections = FALSE)\n\n# Search for section markers\nsection_markers <- c(\"abstract\", \"introduction\", \"methods\", \n                     \"results\", \"discussion\", \"conclusion\")\n\npositions <- sapply(section_markers, function(marker) {\n  gregexpr(marker, doc_raw$Full_text, ignore.case = TRUE)[[1]][1]\n})\n\nprint(positions[positions > 0])\n```\n:::\n\n\n### Problem: Missing References Section\n\n**Solution**: References may be in a separate section or differently named\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check all detected sections\nnames(doc)\n\n# References might be under different names\npossible_refs <- c(\"References\", \"Bibliography\", \"Works Cited\", \"Literature\")\nref_section <- intersect(names(doc), possible_refs)\n\nif (length(ref_section) > 0) {\n  references <- doc[[ref_section]]\n} else {\n  cat(\"References section not found automatically\\n\")\n}\n```\n:::\n\n\n## See Also\n\n- [Content Analysis](content-analysis.qmd): Analyze imported documents\n- [Citation Analysis](citation-analysis.qmd): Extract citations from text\n- [Tutorial](../tutorial.qmd): Complete workflow examples",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}